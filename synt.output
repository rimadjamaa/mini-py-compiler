Terminals unused in grammar

   COM


Rules useless in parser due to conflicts

   10 TAB: /* empty */

   16 L_CONST1: /* empty */

   29 L_VAR: /* empty */

   35 INS: /* empty */
   39    | /* empty */

   43 affectation: /* empty */

   93 L_INS: /* empty */


State 0 conflicts: 8 shift/reduce, 9 reduce/reduce
State 11 conflicts: 8 shift/reduce, 9 reduce/reduce
State 13 conflicts: 1 shift/reduce
State 14 conflicts: 5 shift/reduce, 9 reduce/reduce
State 16 conflicts: 8 shift/reduce, 9 reduce/reduce
State 24 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 101 conflicts: 4 shift/reduce, 10 reduce/reduce
State 121 conflicts: 4 shift/reduce, 10 reduce/reduce
State 123 conflicts: 4 shift/reduce, 10 reduce/reduce
State 139 conflicts: 1 shift/reduce
State 159 conflicts: 4 shift/reduce, 10 reduce/reduce
State 160 conflicts: 4 shift/reduce, 10 reduce/reduce
State 161 conflicts: 4 shift/reduce, 10 reduce/reduce
State 162 conflicts: 4 shift/reduce, 10 reduce/reduce
State 165 conflicts: 1 shift/reduce
State 166 conflicts: 1 shift/reduce
State 173 conflicts: 4 shift/reduce, 10 reduce/reduce
State 174 conflicts: 4 shift/reduce, 10 reduce/reduce


Grammar

    0 $accept: S $end

    1 S: PRO

    2 PRO: DEC_VAR PRO
    3    | INST PRO
    4    | /* empty */

    5 DEC_VAR: L_CONST1 DEC_VAR
    6        | TAB
    7        | L_VAR
    8        | /* empty */

    9 TAB: TYPE IDF ACOU CST_E ACFER
   10    | /* empty */

   11 TYPE: INTEGER
   12     | FLOAT
   13     | BOOL
   14     | CHAR

   15 L_CONST1: IDF AFFECT CONS
   16         | /* empty */

   17 CONS: CST_CH
   18     | CST_E
   19     | PAROU PLUS CST_E PARFER
   20     | CST_R
   21     | PAROU PLUS CST_R PARFER
   22     | cst_SE
   23     | cst_SR
   24     | bool
   25     | /* empty */

   26 cst_SE: PAROU CST_SE PARFER

   27 cst_SR: PAROU CST_SR PARFER

   28 L_VAR: TYPE L_DEC
   29      | /* empty */

   30 L_DEC: IDF ver L_DEC
   31      | IDF
   32      | /* empty */

   33 INST: INS
   34     | /* empty */

   35 INS: /* empty */
   36    | affectation
   37    | CO
   38    | BOU
   39    | /* empty */

   40 affectation: IDF AFFECT EXP_AR
   41            | IDF AFFECT PAROU EXP_AR PARFER P
   42            | IDF AFFECT IDF
   43            | /* empty */

   44 EXP_AR: IDF EXP
   45       | CST_E EXP
   46       | CST_R EXP
   47       | cst_SE EXP
   48       | cst_SR EXP

   49 EXP: PLUS E4
   50    | E1

   51 E1: MOINS E4
   52   | E2

   53 E2: FOIS E4
   54   | E3

   55 E3: DIV E4

   56 E4: IDF
   57   | CST_E
   58   | CST_R
   59   | cst_SE
   60   | cst_SR
   61   | EXP_AR

   62 P: A PAROU EXP_AR PARFER P
   63  | A IDF
   64  | A CST_E
   65  | A CST_R
   66  | DIV PAROU EXP_AR PARFER P
   67  | DIV IDF
   68  | DIV CST_E
   69  | DIV CST_R
   70  | /* empty */

   71 A: PLUS
   72  | MOINS
   73  | FOIS

   74 cond: id1 CP id1
   75     | PAROU id1 CP id1 PARFER

   76 id1: IDF
   77    | CONS

   78 CP: SUP
   79   | SUPE
   80   | INF
   81   | INFE
   82   | AFFECT
   83   | DIFF

   84 CO: mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

   90 N: mc_NOT
   91  | /* empty */

   92 L_INS: INST
   93      | /* empty */

   94 BOU: mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS


Terminals, with rules where they appear

$end (0) 0
error (256)
BOOL (258) 13
INTEGER (259) 11
FLOAT (260) 12
CHAR (261) 14
mc_IF (262) 84 85 86 87 88 89
mc_WHILE (263) 94
mc_ELSE (264) 87 88 89
CST_SE (265) 26
CST_E (266) 9 18 19 45 57 64 68 96
mc_FOR (267) 95 96
mc_INRANGE (268) 96
mc_IN (269) 95
mc_AND (270) 85 88
mc_OR (271) 86 89
mc_NOT (272) 90
SUP (273) 78
INF (274) 80
SUPE (275) 79
INFE (276) 81
DIFF (277) 83
PLUS (278) 19 21 49 71
MOINS (279) 51 72
FOIS (280) 53 73
DIV (281) 55 66 67 68 69
ver (282) 30 96
PAROU (283) 19 21 26 27 41 62 66 75 84 85 86 87 88 89 94 96
PARFER (284) 19 21 26 27 41 62 66 75 84 85 86 87 88 89 94 96
ACOU (285) 9
ACFER (286) 9
DEUXP (287) 84 85 86 87 88 89 94 95 96
AFFECT (288) 15 40 41 42 82
IDF (289) 9 15 30 31 40 41 42 44 56 63 67 76 95 96
COM (290)
CST_CH (291) 17
CST_R (292) 20 21 46 58 65 69
CST_SR (293) 27
bool (294) 24


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
S (41)
    on left: 1, on right: 0
PRO (42)
    on left: 2 3 4, on right: 1 2 3
DEC_VAR (43)
    on left: 5 6 7 8, on right: 2 5
TAB (44)
    on left: 9 10, on right: 6
TYPE (45)
    on left: 11 12 13 14, on right: 9 28
L_CONST1 (46)
    on left: 15 16, on right: 5
CONS (47)
    on left: 17 18 19 20 21 22 23 24 25, on right: 15 77
cst_SE (48)
    on left: 26, on right: 22 47 59
cst_SR (49)
    on left: 27, on right: 23 48 60
L_VAR (50)
    on left: 28 29, on right: 7
L_DEC (51)
    on left: 30 31 32, on right: 28 30
INST (52)
    on left: 33 34, on right: 3 92
INS (53)
    on left: 35 36 37 38 39, on right: 33
affectation (54)
    on left: 40 41 42 43, on right: 36
EXP_AR (55)
    on left: 44 45 46 47 48, on right: 40 41 61 62 66
EXP (56)
    on left: 49 50, on right: 44 45 46 47 48
E1 (57)
    on left: 51 52, on right: 50
E2 (58)
    on left: 53 54, on right: 52
E3 (59)
    on left: 55, on right: 54
E4 (60)
    on left: 56 57 58 59 60 61, on right: 49 51 53 55
P (61)
    on left: 62 63 64 65 66 67 68 69 70, on right: 41 62 66
A (62)
    on left: 71 72 73, on right: 62 63 64 65
cond (63)
    on left: 74 75, on right: 84 85 86 87 88 89 94
id1 (64)
    on left: 76 77, on right: 74 75
CP (65)
    on left: 78 79 80 81 82 83, on right: 74 75
CO (66)
    on left: 84 85 86 87 88 89, on right: 37
N (67)
    on left: 90 91, on right: 84 85 86 87 88 89 94
L_INS (68)
    on left: 92 93, on right: 84 85 86 87 88 89 94 95 96
BOU (69)
    on left: 94 95 96, on right: 38


state 0

    0 $accept: . S $end
    1 S: . PRO
    2 PRO: . DEC_VAR PRO
    3    | . INST PRO
    4    | .
    5 DEC_VAR: . L_CONST1 DEC_VAR
    6        | . TAB
    7        | . L_VAR
    8        | .
    9 TAB: . TYPE IDF ACOU CST_E ACFER
   10    | .
   11 TYPE: . INTEGER
   12     | . FLOAT
   13     | . BOOL
   14     | . CHAR
   15 L_CONST1: . IDF AFFECT CONS
   16         | .
   28 L_VAR: . TYPE L_DEC
   29      | .
   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    BOOL      shift, and go to state 1
    INTEGER   shift, and go to state 2
    FLOAT     shift, and go to state 3
    CHAR      shift, and go to state 4
    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 8

    $end      reduce using rule 4 (PRO)
    $end      [reduce using rule 8 (DEC_VAR)]
    $end      [reduce using rule 10 (TAB)]
    $end      [reduce using rule 16 (L_CONST1)]
    $end      [reduce using rule 29 (L_VAR)]
    $end      [reduce using rule 34 (INST)]
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 8 (DEC_VAR)]
    BOOL      [reduce using rule 10 (TAB)]
    BOOL      [reduce using rule 16 (L_CONST1)]
    BOOL      [reduce using rule 29 (L_VAR)]
    BOOL      [reduce using rule 34 (INST)]
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 8 (DEC_VAR)]
    INTEGER   [reduce using rule 10 (TAB)]
    INTEGER   [reduce using rule 16 (L_CONST1)]
    INTEGER   [reduce using rule 29 (L_VAR)]
    INTEGER   [reduce using rule 34 (INST)]
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 8 (DEC_VAR)]
    FLOAT     [reduce using rule 10 (TAB)]
    FLOAT     [reduce using rule 16 (L_CONST1)]
    FLOAT     [reduce using rule 29 (L_VAR)]
    FLOAT     [reduce using rule 34 (INST)]
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 8 (DEC_VAR)]
    CHAR      [reduce using rule 10 (TAB)]
    CHAR      [reduce using rule 16 (L_CONST1)]
    CHAR      [reduce using rule 29 (L_VAR)]
    CHAR      [reduce using rule 34 (INST)]
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 8 (DEC_VAR)]
    mc_IF     [reduce using rule 10 (TAB)]
    mc_IF     [reduce using rule 16 (L_CONST1)]
    mc_IF     [reduce using rule 29 (L_VAR)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 8 (DEC_VAR)]
    mc_WHILE  [reduce using rule 10 (TAB)]
    mc_WHILE  [reduce using rule 16 (L_CONST1)]
    mc_WHILE  [reduce using rule 29 (L_VAR)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 8 (DEC_VAR)]
    mc_FOR    [reduce using rule 10 (TAB)]
    mc_FOR    [reduce using rule 16 (L_CONST1)]
    mc_FOR    [reduce using rule 29 (L_VAR)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 8 (DEC_VAR)]
    IDF       [reduce using rule 10 (TAB)]
    IDF       [reduce using rule 16 (L_CONST1)]
    IDF       [reduce using rule 29 (L_VAR)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    $default  reduce using rule 4 (PRO)

    S            go to state 9
    PRO          go to state 10
    DEC_VAR      go to state 11
    TAB          go to state 12
    TYPE         go to state 13
    L_CONST1     go to state 14
    L_VAR        go to state 15
    INST         go to state 16
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    BOU          go to state 20


state 1

   13 TYPE: BOOL .

    $default  reduce using rule 13 (TYPE)


state 2

   11 TYPE: INTEGER .

    $default  reduce using rule 11 (TYPE)


state 3

   12 TYPE: FLOAT .

    $default  reduce using rule 12 (TYPE)


state 4

   14 TYPE: CHAR .

    $default  reduce using rule 14 (TYPE)


state 5

   84 CO: mc_IF . PAROU N cond PARFER DEUXP L_INS
   85   | mc_IF . PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | mc_IF . PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | mc_IF . PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF . PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF . PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    PAROU  shift, and go to state 21


state 6

   94 BOU: mc_WHILE . PAROU N cond PARFER DEUXP L_INS

    PAROU  shift, and go to state 22


state 7

   95 BOU: mc_FOR . IDF mc_IN IDF DEUXP L_INS
   96    | mc_FOR . IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    IDF  shift, and go to state 23


state 8

   15 L_CONST1: IDF . AFFECT CONS
   40 affectation: IDF . AFFECT EXP_AR
   41            | IDF . AFFECT PAROU EXP_AR PARFER P
   42            | IDF . AFFECT IDF

    AFFECT  shift, and go to state 24


state 9

    0 $accept: S . $end

    $end  shift, and go to state 25


state 10

    1 S: PRO .

    $default  reduce using rule 1 (S)


state 11

    2 PRO: . DEC_VAR PRO
    2    | DEC_VAR . PRO
    3    | . INST PRO
    4    | .
    5 DEC_VAR: . L_CONST1 DEC_VAR
    6        | . TAB
    7        | . L_VAR
    8        | .
    9 TAB: . TYPE IDF ACOU CST_E ACFER
   10    | .
   11 TYPE: . INTEGER
   12     | . FLOAT
   13     | . BOOL
   14     | . CHAR
   15 L_CONST1: . IDF AFFECT CONS
   16         | .
   28 L_VAR: . TYPE L_DEC
   29      | .
   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    BOOL      shift, and go to state 1
    INTEGER   shift, and go to state 2
    FLOAT     shift, and go to state 3
    CHAR      shift, and go to state 4
    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 8

    $end      reduce using rule 4 (PRO)
    $end      [reduce using rule 8 (DEC_VAR)]
    $end      [reduce using rule 10 (TAB)]
    $end      [reduce using rule 16 (L_CONST1)]
    $end      [reduce using rule 29 (L_VAR)]
    $end      [reduce using rule 34 (INST)]
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 8 (DEC_VAR)]
    BOOL      [reduce using rule 10 (TAB)]
    BOOL      [reduce using rule 16 (L_CONST1)]
    BOOL      [reduce using rule 29 (L_VAR)]
    BOOL      [reduce using rule 34 (INST)]
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 8 (DEC_VAR)]
    INTEGER   [reduce using rule 10 (TAB)]
    INTEGER   [reduce using rule 16 (L_CONST1)]
    INTEGER   [reduce using rule 29 (L_VAR)]
    INTEGER   [reduce using rule 34 (INST)]
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 8 (DEC_VAR)]
    FLOAT     [reduce using rule 10 (TAB)]
    FLOAT     [reduce using rule 16 (L_CONST1)]
    FLOAT     [reduce using rule 29 (L_VAR)]
    FLOAT     [reduce using rule 34 (INST)]
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 8 (DEC_VAR)]
    CHAR      [reduce using rule 10 (TAB)]
    CHAR      [reduce using rule 16 (L_CONST1)]
    CHAR      [reduce using rule 29 (L_VAR)]
    CHAR      [reduce using rule 34 (INST)]
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 8 (DEC_VAR)]
    mc_IF     [reduce using rule 10 (TAB)]
    mc_IF     [reduce using rule 16 (L_CONST1)]
    mc_IF     [reduce using rule 29 (L_VAR)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 8 (DEC_VAR)]
    mc_WHILE  [reduce using rule 10 (TAB)]
    mc_WHILE  [reduce using rule 16 (L_CONST1)]
    mc_WHILE  [reduce using rule 29 (L_VAR)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 8 (DEC_VAR)]
    mc_FOR    [reduce using rule 10 (TAB)]
    mc_FOR    [reduce using rule 16 (L_CONST1)]
    mc_FOR    [reduce using rule 29 (L_VAR)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 8 (DEC_VAR)]
    IDF       [reduce using rule 10 (TAB)]
    IDF       [reduce using rule 16 (L_CONST1)]
    IDF       [reduce using rule 29 (L_VAR)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    $default  reduce using rule 4 (PRO)

    PRO          go to state 26
    DEC_VAR      go to state 11
    TAB          go to state 12
    TYPE         go to state 13
    L_CONST1     go to state 14
    L_VAR        go to state 15
    INST         go to state 16
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    BOU          go to state 20


state 12

    6 DEC_VAR: TAB .

    $default  reduce using rule 6 (DEC_VAR)


state 13

    9 TAB: TYPE . IDF ACOU CST_E ACFER
   28 L_VAR: TYPE . L_DEC
   30 L_DEC: . IDF ver L_DEC
   31      | . IDF
   32      | .

    IDF  shift, and go to state 27

    IDF       [reduce using rule 32 (L_DEC)]
    $default  reduce using rule 32 (L_DEC)

    L_DEC  go to state 28


state 14

    5 DEC_VAR: . L_CONST1 DEC_VAR
    5        | L_CONST1 . DEC_VAR
    6        | . TAB
    7        | . L_VAR
    8        | .
    9 TAB: . TYPE IDF ACOU CST_E ACFER
   10    | .
   11 TYPE: . INTEGER
   12     | . FLOAT
   13     | . BOOL
   14     | . CHAR
   15 L_CONST1: . IDF AFFECT CONS
   16         | .
   28 L_VAR: . TYPE L_DEC
   29      | .

    BOOL     shift, and go to state 1
    INTEGER  shift, and go to state 2
    FLOAT    shift, and go to state 3
    CHAR     shift, and go to state 4
    IDF      shift, and go to state 29

    $end      reduce using rule 8 (DEC_VAR)
    $end      [reduce using rule 10 (TAB)]
    $end      [reduce using rule 16 (L_CONST1)]
    $end      [reduce using rule 29 (L_VAR)]
    BOOL      [reduce using rule 8 (DEC_VAR)]
    BOOL      [reduce using rule 10 (TAB)]
    BOOL      [reduce using rule 16 (L_CONST1)]
    BOOL      [reduce using rule 29 (L_VAR)]
    INTEGER   [reduce using rule 8 (DEC_VAR)]
    INTEGER   [reduce using rule 10 (TAB)]
    INTEGER   [reduce using rule 16 (L_CONST1)]
    INTEGER   [reduce using rule 29 (L_VAR)]
    FLOAT     [reduce using rule 8 (DEC_VAR)]
    FLOAT     [reduce using rule 10 (TAB)]
    FLOAT     [reduce using rule 16 (L_CONST1)]
    FLOAT     [reduce using rule 29 (L_VAR)]
    CHAR      [reduce using rule 8 (DEC_VAR)]
    CHAR      [reduce using rule 10 (TAB)]
    CHAR      [reduce using rule 16 (L_CONST1)]
    CHAR      [reduce using rule 29 (L_VAR)]
    mc_IF     reduce using rule 8 (DEC_VAR)
    mc_IF     [reduce using rule 10 (TAB)]
    mc_IF     [reduce using rule 16 (L_CONST1)]
    mc_IF     [reduce using rule 29 (L_VAR)]
    mc_WHILE  reduce using rule 8 (DEC_VAR)
    mc_WHILE  [reduce using rule 10 (TAB)]
    mc_WHILE  [reduce using rule 16 (L_CONST1)]
    mc_WHILE  [reduce using rule 29 (L_VAR)]
    mc_FOR    reduce using rule 8 (DEC_VAR)
    mc_FOR    [reduce using rule 10 (TAB)]
    mc_FOR    [reduce using rule 16 (L_CONST1)]
    mc_FOR    [reduce using rule 29 (L_VAR)]
    IDF       [reduce using rule 8 (DEC_VAR)]
    IDF       [reduce using rule 10 (TAB)]
    IDF       [reduce using rule 16 (L_CONST1)]
    IDF       [reduce using rule 29 (L_VAR)]
    $default  reduce using rule 8 (DEC_VAR)

    DEC_VAR   go to state 30
    TAB       go to state 12
    TYPE      go to state 13
    L_CONST1  go to state 14
    L_VAR     go to state 15


state 15

    7 DEC_VAR: L_VAR .

    $default  reduce using rule 7 (DEC_VAR)


state 16

    2 PRO: . DEC_VAR PRO
    3    | . INST PRO
    3    | INST . PRO
    4    | .
    5 DEC_VAR: . L_CONST1 DEC_VAR
    6        | . TAB
    7        | . L_VAR
    8        | .
    9 TAB: . TYPE IDF ACOU CST_E ACFER
   10    | .
   11 TYPE: . INTEGER
   12     | . FLOAT
   13     | . BOOL
   14     | . CHAR
   15 L_CONST1: . IDF AFFECT CONS
   16         | .
   28 L_VAR: . TYPE L_DEC
   29      | .
   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    BOOL      shift, and go to state 1
    INTEGER   shift, and go to state 2
    FLOAT     shift, and go to state 3
    CHAR      shift, and go to state 4
    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 8

    $end      reduce using rule 4 (PRO)
    $end      [reduce using rule 8 (DEC_VAR)]
    $end      [reduce using rule 10 (TAB)]
    $end      [reduce using rule 16 (L_CONST1)]
    $end      [reduce using rule 29 (L_VAR)]
    $end      [reduce using rule 34 (INST)]
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 8 (DEC_VAR)]
    BOOL      [reduce using rule 10 (TAB)]
    BOOL      [reduce using rule 16 (L_CONST1)]
    BOOL      [reduce using rule 29 (L_VAR)]
    BOOL      [reduce using rule 34 (INST)]
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 8 (DEC_VAR)]
    INTEGER   [reduce using rule 10 (TAB)]
    INTEGER   [reduce using rule 16 (L_CONST1)]
    INTEGER   [reduce using rule 29 (L_VAR)]
    INTEGER   [reduce using rule 34 (INST)]
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 8 (DEC_VAR)]
    FLOAT     [reduce using rule 10 (TAB)]
    FLOAT     [reduce using rule 16 (L_CONST1)]
    FLOAT     [reduce using rule 29 (L_VAR)]
    FLOAT     [reduce using rule 34 (INST)]
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 8 (DEC_VAR)]
    CHAR      [reduce using rule 10 (TAB)]
    CHAR      [reduce using rule 16 (L_CONST1)]
    CHAR      [reduce using rule 29 (L_VAR)]
    CHAR      [reduce using rule 34 (INST)]
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 8 (DEC_VAR)]
    mc_IF     [reduce using rule 10 (TAB)]
    mc_IF     [reduce using rule 16 (L_CONST1)]
    mc_IF     [reduce using rule 29 (L_VAR)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 8 (DEC_VAR)]
    mc_WHILE  [reduce using rule 10 (TAB)]
    mc_WHILE  [reduce using rule 16 (L_CONST1)]
    mc_WHILE  [reduce using rule 29 (L_VAR)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 8 (DEC_VAR)]
    mc_FOR    [reduce using rule 10 (TAB)]
    mc_FOR    [reduce using rule 16 (L_CONST1)]
    mc_FOR    [reduce using rule 29 (L_VAR)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 8 (DEC_VAR)]
    IDF       [reduce using rule 10 (TAB)]
    IDF       [reduce using rule 16 (L_CONST1)]
    IDF       [reduce using rule 29 (L_VAR)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    $default  reduce using rule 4 (PRO)

    PRO          go to state 31
    DEC_VAR      go to state 11
    TAB          go to state 12
    TYPE         go to state 13
    L_CONST1     go to state 14
    L_VAR        go to state 15
    INST         go to state 16
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    BOU          go to state 20


state 17

   33 INST: INS .

    $default  reduce using rule 33 (INST)


state 18

   36 INS: affectation .

    $default  reduce using rule 36 (INS)


state 19

   37 INS: CO .

    $default  reduce using rule 37 (INS)


state 20

   38 INS: BOU .

    $default  reduce using rule 38 (INS)


state 21

   84 CO: mc_IF PAROU . N cond PARFER DEUXP L_INS
   85   | mc_IF PAROU . N cond mc_AND N cond PARFER DEUXP L_INS
   86   | mc_IF PAROU . N cond mc_OR N cond PARFER DEUXP L_INS
   87   | mc_IF PAROU . N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF PAROU . N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF PAROU . N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   90 N: . mc_NOT
   91  | .

    mc_NOT  shift, and go to state 32

    $default  reduce using rule 91 (N)

    N  go to state 33


state 22

   90 N: . mc_NOT
   91  | .
   94 BOU: mc_WHILE PAROU . N cond PARFER DEUXP L_INS

    mc_NOT  shift, and go to state 32

    $default  reduce using rule 91 (N)

    N  go to state 34


state 23

   95 BOU: mc_FOR IDF . mc_IN IDF DEUXP L_INS
   96    | mc_FOR IDF . mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_INRANGE  shift, and go to state 35
    mc_IN       shift, and go to state 36


state 24

   15 L_CONST1: IDF AFFECT . CONS
   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   40 affectation: IDF AFFECT . EXP_AR
   41            | IDF AFFECT . PAROU EXP_AR PARFER P
   42            | IDF AFFECT . IDF
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP

    CST_E   shift, and go to state 37
    PAROU   shift, and go to state 38
    IDF     shift, and go to state 39
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 41
    bool    shift, and go to state 42

    IDF       [reduce using rule 25 (CONS)]
    $default  reduce using rule 25 (CONS)

    CONS    go to state 43
    cst_SE  go to state 44
    cst_SR  go to state 45
    EXP_AR  go to state 46


state 25

    0 $accept: S $end .

    $default  accept


state 26

    2 PRO: DEC_VAR PRO .

    $default  reduce using rule 2 (PRO)


state 27

    9 TAB: TYPE IDF . ACOU CST_E ACFER
   30 L_DEC: IDF . ver L_DEC
   31      | IDF .

    ver   shift, and go to state 47
    ACOU  shift, and go to state 48

    $default  reduce using rule 31 (L_DEC)


state 28

   28 L_VAR: TYPE L_DEC .

    $default  reduce using rule 28 (L_VAR)


state 29

   15 L_CONST1: IDF . AFFECT CONS

    AFFECT  shift, and go to state 49


state 30

    5 DEC_VAR: L_CONST1 DEC_VAR .

    $default  reduce using rule 5 (DEC_VAR)


state 31

    3 PRO: INST PRO .

    $default  reduce using rule 3 (PRO)


state 32

   90 N: mc_NOT .

    $default  reduce using rule 90 (N)


state 33

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   74 cond: . id1 CP id1
   75     | . PAROU id1 CP id1 PARFER
   76 id1: . IDF
   77    | . CONS
   84 CO: mc_IF PAROU N . cond PARFER DEUXP L_INS
   85   | mc_IF PAROU N . cond mc_AND N cond PARFER DEUXP L_INS
   86   | mc_IF PAROU N . cond mc_OR N cond PARFER DEUXP L_INS
   87   | mc_IF PAROU N . cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF PAROU N . cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF PAROU N . cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 51
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    cond    go to state 57
    id1     go to state 58


state 34

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   74 cond: . id1 CP id1
   75     | . PAROU id1 CP id1 PARFER
   76 id1: . IDF
   77    | . CONS
   94 BOU: mc_WHILE PAROU N . cond PARFER DEUXP L_INS

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 51
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    cond    go to state 59
    id1     go to state 58


state 35

   96 BOU: mc_FOR IDF mc_INRANGE . PAROU CST_E ver CST_E PARFER DEUXP L_INS

    PAROU  shift, and go to state 60


state 36

   95 BOU: mc_FOR IDF mc_IN . IDF DEUXP L_INS

    IDF  shift, and go to state 61


state 37

   18 CONS: CST_E .
   45 EXP_AR: CST_E . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 18 (CONS)

    EXP  go to state 66
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 38

   19 CONS: PAROU . PLUS CST_E PARFER
   21     | PAROU . PLUS CST_R PARFER
   26 cst_SE: . PAROU CST_SE PARFER
   26       | PAROU . CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   27       | PAROU . CST_SR PARFER
   41 affectation: IDF AFFECT PAROU . EXP_AR PARFER P
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP

    CST_SE  shift, and go to state 70
    CST_E   shift, and go to state 71
    PLUS    shift, and go to state 72
    PAROU   shift, and go to state 73
    IDF     shift, and go to state 74
    CST_R   shift, and go to state 75
    CST_SR  shift, and go to state 76

    cst_SE  go to state 77
    cst_SR  go to state 78
    EXP_AR  go to state 79


state 39

   42 affectation: IDF AFFECT IDF .
   44 EXP_AR: IDF . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 42 (affectation)

    EXP  go to state 80
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 40

   17 CONS: CST_CH .

    $default  reduce using rule 17 (CONS)


state 41

   20 CONS: CST_R .
   46 EXP_AR: CST_R . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 20 (CONS)

    EXP  go to state 81
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 42

   24 CONS: bool .

    $default  reduce using rule 24 (CONS)


state 43

   15 L_CONST1: IDF AFFECT CONS .

    $default  reduce using rule 15 (L_CONST1)


state 44

   22 CONS: cst_SE .
   47 EXP_AR: cst_SE . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 22 (CONS)

    EXP  go to state 82
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 45

   23 CONS: cst_SR .
   48 EXP_AR: cst_SR . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 23 (CONS)

    EXP  go to state 83
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 46

   40 affectation: IDF AFFECT EXP_AR .

    $default  reduce using rule 40 (affectation)


state 47

   30 L_DEC: . IDF ver L_DEC
   30      | IDF ver . L_DEC
   31      | . IDF
   32      | .

    IDF  shift, and go to state 84

    IDF       [reduce using rule 32 (L_DEC)]
    $default  reduce using rule 32 (L_DEC)

    L_DEC  go to state 85


state 48

    9 TAB: TYPE IDF ACOU . CST_E ACFER

    CST_E  shift, and go to state 86


state 49

   15 L_CONST1: IDF AFFECT . CONS
   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 87
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 43
    cst_SE  go to state 55
    cst_SR  go to state 56


state 50

   18 CONS: CST_E .

    $default  reduce using rule 18 (CONS)


state 51

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   19     | PAROU . PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   21     | PAROU . PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   26       | PAROU . CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   27       | PAROU . CST_SR PARFER
   75 cond: PAROU . id1 CP id1 PARFER
   76 id1: . IDF
   77    | . CONS

    CST_SE  shift, and go to state 70
    CST_E   shift, and go to state 50
    PLUS    shift, and go to state 72
    PAROU   shift, and go to state 87
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    CST_SR  shift, and go to state 76
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    id1     go to state 88


state 52

   76 id1: IDF .

    $default  reduce using rule 76 (id1)


state 53

   20 CONS: CST_R .

    $default  reduce using rule 20 (CONS)


state 54

   77 id1: CONS .

    $default  reduce using rule 77 (id1)


state 55

   22 CONS: cst_SE .

    $default  reduce using rule 22 (CONS)


state 56

   23 CONS: cst_SR .

    $default  reduce using rule 23 (CONS)


state 57

   84 CO: mc_IF PAROU N cond . PARFER DEUXP L_INS
   85   | mc_IF PAROU N cond . mc_AND N cond PARFER DEUXP L_INS
   86   | mc_IF PAROU N cond . mc_OR N cond PARFER DEUXP L_INS
   87   | mc_IF PAROU N cond . PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF PAROU N cond . mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF PAROU N cond . mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    mc_AND  shift, and go to state 89
    mc_OR   shift, and go to state 90
    PARFER  shift, and go to state 91


state 58

   74 cond: id1 . CP id1
   78 CP: . SUP
   79   | . SUPE
   80   | . INF
   81   | . INFE
   82   | . AFFECT
   83   | . DIFF

    SUP     shift, and go to state 92
    INF     shift, and go to state 93
    SUPE    shift, and go to state 94
    INFE    shift, and go to state 95
    DIFF    shift, and go to state 96
    AFFECT  shift, and go to state 97

    CP  go to state 98


state 59

   94 BOU: mc_WHILE PAROU N cond . PARFER DEUXP L_INS

    PARFER  shift, and go to state 99


state 60

   96 BOU: mc_FOR IDF mc_INRANGE PAROU . CST_E ver CST_E PARFER DEUXP L_INS

    CST_E  shift, and go to state 100


state 61

   95 BOU: mc_FOR IDF mc_IN IDF . DEUXP L_INS

    DEUXP  shift, and go to state 101


state 62

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP
   49 EXP: PLUS . E4
   56 E4: . IDF
   57   | . CST_E
   58   | . CST_R
   59   | . cst_SE
   60   | . cst_SR
   61   | . EXP_AR

    CST_E  shift, and go to state 102
    PAROU  shift, and go to state 73
    IDF    shift, and go to state 103
    CST_R  shift, and go to state 104

    cst_SE  go to state 105
    cst_SR  go to state 106
    EXP_AR  go to state 107
    E4      go to state 108


state 63

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP
   51 E1: MOINS . E4
   56 E4: . IDF
   57   | . CST_E
   58   | . CST_R
   59   | . cst_SE
   60   | . cst_SR
   61   | . EXP_AR

    CST_E  shift, and go to state 102
    PAROU  shift, and go to state 73
    IDF    shift, and go to state 103
    CST_R  shift, and go to state 104

    cst_SE  go to state 105
    cst_SR  go to state 106
    EXP_AR  go to state 107
    E4      go to state 109


state 64

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP
   53 E2: FOIS . E4
   56 E4: . IDF
   57   | . CST_E
   58   | . CST_R
   59   | . cst_SE
   60   | . cst_SR
   61   | . EXP_AR

    CST_E  shift, and go to state 102
    PAROU  shift, and go to state 73
    IDF    shift, and go to state 103
    CST_R  shift, and go to state 104

    cst_SE  go to state 105
    cst_SR  go to state 106
    EXP_AR  go to state 107
    E4      go to state 110


state 65

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP
   55 E3: DIV . E4
   56 E4: . IDF
   57   | . CST_E
   58   | . CST_R
   59   | . cst_SE
   60   | . cst_SR
   61   | . EXP_AR

    CST_E  shift, and go to state 102
    PAROU  shift, and go to state 73
    IDF    shift, and go to state 103
    CST_R  shift, and go to state 104

    cst_SE  go to state 105
    cst_SR  go to state 106
    EXP_AR  go to state 107
    E4      go to state 111


state 66

   45 EXP_AR: CST_E EXP .

    $default  reduce using rule 45 (EXP_AR)


state 67

   50 EXP: E1 .

    $default  reduce using rule 50 (EXP)


state 68

   52 E1: E2 .

    $default  reduce using rule 52 (E1)


state 69

   54 E2: E3 .

    $default  reduce using rule 54 (E2)


state 70

   26 cst_SE: PAROU CST_SE . PARFER

    PARFER  shift, and go to state 112


state 71

   45 EXP_AR: CST_E . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    EXP  go to state 66
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 72

   19 CONS: PAROU PLUS . CST_E PARFER
   21     | PAROU PLUS . CST_R PARFER

    CST_E  shift, and go to state 113
    CST_R  shift, and go to state 114


state 73

   26 cst_SE: PAROU . CST_SE PARFER
   27 cst_SR: PAROU . CST_SR PARFER

    CST_SE  shift, and go to state 70
    CST_SR  shift, and go to state 76


state 74

   44 EXP_AR: IDF . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    EXP  go to state 80
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 75

   46 EXP_AR: CST_R . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    EXP  go to state 81
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 76

   27 cst_SR: PAROU CST_SR . PARFER

    PARFER  shift, and go to state 115


state 77

   47 EXP_AR: cst_SE . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    EXP  go to state 82
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 78

   48 EXP_AR: cst_SR . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    EXP  go to state 83
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 79

   41 affectation: IDF AFFECT PAROU EXP_AR . PARFER P

    PARFER  shift, and go to state 116


state 80

   44 EXP_AR: IDF EXP .

    $default  reduce using rule 44 (EXP_AR)


state 81

   46 EXP_AR: CST_R EXP .

    $default  reduce using rule 46 (EXP_AR)


state 82

   47 EXP_AR: cst_SE EXP .

    $default  reduce using rule 47 (EXP_AR)


state 83

   48 EXP_AR: cst_SR EXP .

    $default  reduce using rule 48 (EXP_AR)


state 84

   30 L_DEC: IDF . ver L_DEC
   31      | IDF .

    ver  shift, and go to state 47

    $default  reduce using rule 31 (L_DEC)


state 85

   30 L_DEC: IDF ver L_DEC .

    $default  reduce using rule 30 (L_DEC)


state 86

    9 TAB: TYPE IDF ACOU CST_E . ACFER

    ACFER  shift, and go to state 117


state 87

   19 CONS: PAROU . PLUS CST_E PARFER
   21     | PAROU . PLUS CST_R PARFER
   26 cst_SE: PAROU . CST_SE PARFER
   27 cst_SR: PAROU . CST_SR PARFER

    CST_SE  shift, and go to state 70
    PLUS    shift, and go to state 72
    CST_SR  shift, and go to state 76


state 88

   75 cond: PAROU id1 . CP id1 PARFER
   78 CP: . SUP
   79   | . SUPE
   80   | . INF
   81   | . INFE
   82   | . AFFECT
   83   | . DIFF

    SUP     shift, and go to state 92
    INF     shift, and go to state 93
    SUPE    shift, and go to state 94
    INFE    shift, and go to state 95
    DIFF    shift, and go to state 96
    AFFECT  shift, and go to state 97

    CP  go to state 118


state 89

   85 CO: mc_IF PAROU N cond mc_AND . N cond PARFER DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND . N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   90 N: . mc_NOT
   91  | .

    mc_NOT  shift, and go to state 32

    $default  reduce using rule 91 (N)

    N  go to state 119


state 90

   86 CO: mc_IF PAROU N cond mc_OR . N cond PARFER DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR . N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   90 N: . mc_NOT
   91  | .

    mc_NOT  shift, and go to state 32

    $default  reduce using rule 91 (N)

    N  go to state 120


state 91

   84 CO: mc_IF PAROU N cond PARFER . DEUXP L_INS
   87   | mc_IF PAROU N cond PARFER . DEUXP L_INS mc_ELSE DEUXP L_INS

    DEUXP  shift, and go to state 121


state 92

   78 CP: SUP .

    $default  reduce using rule 78 (CP)


state 93

   80 CP: INF .

    $default  reduce using rule 80 (CP)


state 94

   79 CP: SUPE .

    $default  reduce using rule 79 (CP)


state 95

   81 CP: INFE .

    $default  reduce using rule 81 (CP)


state 96

   83 CP: DIFF .

    $default  reduce using rule 83 (CP)


state 97

   82 CP: AFFECT .

    $default  reduce using rule 82 (CP)


state 98

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   74 cond: id1 CP . id1
   76 id1: . IDF
   77    | . CONS

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 87
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    id1     go to state 122


state 99

   94 BOU: mc_WHILE PAROU N cond PARFER . DEUXP L_INS

    DEUXP  shift, and go to state 123


state 100

   96 BOU: mc_FOR IDF mc_INRANGE PAROU CST_E . ver CST_E PARFER DEUXP L_INS

    ver  shift, and go to state 124


state 101

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   95    | mc_FOR IDF mc_IN IDF DEUXP . L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 127
    BOU          go to state 20


state 102

   45 EXP_AR: CST_E . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4
   57 E4: CST_E .

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 57 (E4)

    EXP  go to state 66
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 103

   44 EXP_AR: IDF . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4
   56 E4: IDF .

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 56 (E4)

    EXP  go to state 80
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 104

   46 EXP_AR: CST_R . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4
   58 E4: CST_R .

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 58 (E4)

    EXP  go to state 81
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 105

   47 EXP_AR: cst_SE . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4
   59 E4: cst_SE .

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 59 (E4)

    EXP  go to state 82
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 106

   48 EXP_AR: cst_SR . EXP
   49 EXP: . PLUS E4
   50    | . E1
   51 E1: . MOINS E4
   52   | . E2
   53 E2: . FOIS E4
   54   | . E3
   55 E3: . DIV E4
   60 E4: cst_SR .

    PLUS   shift, and go to state 62
    MOINS  shift, and go to state 63
    FOIS   shift, and go to state 64
    DIV    shift, and go to state 65

    $default  reduce using rule 60 (E4)

    EXP  go to state 83
    E1   go to state 67
    E2   go to state 68
    E3   go to state 69


state 107

   61 E4: EXP_AR .

    $default  reduce using rule 61 (E4)


state 108

   49 EXP: PLUS E4 .

    $default  reduce using rule 49 (EXP)


state 109

   51 E1: MOINS E4 .

    $default  reduce using rule 51 (E1)


state 110

   53 E2: FOIS E4 .

    $default  reduce using rule 53 (E2)


state 111

   55 E3: DIV E4 .

    $default  reduce using rule 55 (E3)


state 112

   26 cst_SE: PAROU CST_SE PARFER .

    $default  reduce using rule 26 (cst_SE)


state 113

   19 CONS: PAROU PLUS CST_E . PARFER

    PARFER  shift, and go to state 128


state 114

   21 CONS: PAROU PLUS CST_R . PARFER

    PARFER  shift, and go to state 129


state 115

   27 cst_SR: PAROU CST_SR PARFER .

    $default  reduce using rule 27 (cst_SR)


state 116

   41 affectation: IDF AFFECT PAROU EXP_AR PARFER . P
   62 P: . A PAROU EXP_AR PARFER P
   63  | . A IDF
   64  | . A CST_E
   65  | . A CST_R
   66  | . DIV PAROU EXP_AR PARFER P
   67  | . DIV IDF
   68  | . DIV CST_E
   69  | . DIV CST_R
   70  | .
   71 A: . PLUS
   72  | . MOINS
   73  | . FOIS

    PLUS   shift, and go to state 130
    MOINS  shift, and go to state 131
    FOIS   shift, and go to state 132
    DIV    shift, and go to state 133

    $default  reduce using rule 70 (P)

    P  go to state 134
    A  go to state 135


state 117

    9 TAB: TYPE IDF ACOU CST_E ACFER .

    $default  reduce using rule 9 (TAB)


state 118

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   75 cond: PAROU id1 CP . id1 PARFER
   76 id1: . IDF
   77    | . CONS

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 87
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    id1     go to state 136


state 119

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   74 cond: . id1 CP id1
   75     | . PAROU id1 CP id1 PARFER
   76 id1: . IDF
   77    | . CONS
   85 CO: mc_IF PAROU N cond mc_AND N . cond PARFER DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND N . cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 51
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    cond    go to state 137
    id1     go to state 58


state 120

   17 CONS: . CST_CH
   18     | . CST_E
   19     | . PAROU PLUS CST_E PARFER
   20     | . CST_R
   21     | . PAROU PLUS CST_R PARFER
   22     | . cst_SE
   23     | . cst_SR
   24     | . bool
   25     | .
   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   74 cond: . id1 CP id1
   75     | . PAROU id1 CP id1 PARFER
   76 id1: . IDF
   77    | . CONS
   86 CO: mc_IF PAROU N cond mc_OR N . cond PARFER DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR N . cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    CST_E   shift, and go to state 50
    PAROU   shift, and go to state 51
    IDF     shift, and go to state 52
    CST_CH  shift, and go to state 40
    CST_R   shift, and go to state 53
    bool    shift, and go to state 42

    $default  reduce using rule 25 (CONS)

    CONS    go to state 54
    cst_SE  go to state 55
    cst_SR  go to state 56
    cond    go to state 138
    id1     go to state 58


state 121

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   84   | mc_IF PAROU N cond PARFER DEUXP . L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   87   | mc_IF PAROU N cond PARFER DEUXP . L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 139
    BOU          go to state 20


state 122

   74 cond: id1 CP id1 .

    $default  reduce using rule 74 (cond)


state 123

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   94    | mc_WHILE PAROU N cond PARFER DEUXP . L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 140
    BOU          go to state 20


state 124

   96 BOU: mc_FOR IDF mc_INRANGE PAROU CST_E ver . CST_E PARFER DEUXP L_INS

    CST_E  shift, and go to state 141


state 125

   40 affectation: IDF . AFFECT EXP_AR
   41            | IDF . AFFECT PAROU EXP_AR PARFER P
   42            | IDF . AFFECT IDF

    AFFECT  shift, and go to state 142


state 126

   92 L_INS: INST .

    $default  reduce using rule 92 (L_INS)


state 127

   95 BOU: mc_FOR IDF mc_IN IDF DEUXP L_INS .

    $default  reduce using rule 95 (BOU)


state 128

   19 CONS: PAROU PLUS CST_E PARFER .

    $default  reduce using rule 19 (CONS)


state 129

   21 CONS: PAROU PLUS CST_R PARFER .

    $default  reduce using rule 21 (CONS)


state 130

   71 A: PLUS .

    $default  reduce using rule 71 (A)


state 131

   72 A: MOINS .

    $default  reduce using rule 72 (A)


state 132

   73 A: FOIS .

    $default  reduce using rule 73 (A)


state 133

   66 P: DIV . PAROU EXP_AR PARFER P
   67  | DIV . IDF
   68  | DIV . CST_E
   69  | DIV . CST_R

    CST_E  shift, and go to state 143
    PAROU  shift, and go to state 144
    IDF    shift, and go to state 145
    CST_R  shift, and go to state 146


state 134

   41 affectation: IDF AFFECT PAROU EXP_AR PARFER P .

    $default  reduce using rule 41 (affectation)


state 135

   62 P: A . PAROU EXP_AR PARFER P
   63  | A . IDF
   64  | A . CST_E
   65  | A . CST_R

    CST_E  shift, and go to state 147
    PAROU  shift, and go to state 148
    IDF    shift, and go to state 149
    CST_R  shift, and go to state 150


state 136

   75 cond: PAROU id1 CP id1 . PARFER

    PARFER  shift, and go to state 151


state 137

   85 CO: mc_IF PAROU N cond mc_AND N cond . PARFER DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND N cond . PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    PARFER  shift, and go to state 152


state 138

   86 CO: mc_IF PAROU N cond mc_OR N cond . PARFER DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR N cond . PARFER DEUXP L_INS mc_ELSE DEUXP L_INS

    PARFER  shift, and go to state 153


state 139

   84 CO: mc_IF PAROU N cond PARFER DEUXP L_INS .
   87   | mc_IF PAROU N cond PARFER DEUXP L_INS . mc_ELSE DEUXP L_INS

    mc_ELSE  shift, and go to state 154

    mc_ELSE   [reduce using rule 84 (CO)]
    $default  reduce using rule 84 (CO)


state 140

   94 BOU: mc_WHILE PAROU N cond PARFER DEUXP L_INS .

    $default  reduce using rule 94 (BOU)


state 141

   96 BOU: mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E . PARFER DEUXP L_INS

    PARFER  shift, and go to state 155


state 142

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   40 affectation: IDF AFFECT . EXP_AR
   41            | IDF AFFECT . PAROU EXP_AR PARFER P
   42            | IDF AFFECT . IDF
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP

    CST_E  shift, and go to state 71
    PAROU  shift, and go to state 156
    IDF    shift, and go to state 39
    CST_R  shift, and go to state 75

    cst_SE  go to state 77
    cst_SR  go to state 78
    EXP_AR  go to state 46


state 143

   68 P: DIV CST_E .

    $default  reduce using rule 68 (P)


state 144

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP
   66 P: DIV PAROU . EXP_AR PARFER P

    CST_E  shift, and go to state 71
    PAROU  shift, and go to state 73
    IDF    shift, and go to state 74
    CST_R  shift, and go to state 75

    cst_SE  go to state 77
    cst_SR  go to state 78
    EXP_AR  go to state 157


state 145

   67 P: DIV IDF .

    $default  reduce using rule 67 (P)


state 146

   69 P: DIV CST_R .

    $default  reduce using rule 69 (P)


state 147

   64 P: A CST_E .

    $default  reduce using rule 64 (P)


state 148

   26 cst_SE: . PAROU CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP
   62 P: A PAROU . EXP_AR PARFER P

    CST_E  shift, and go to state 71
    PAROU  shift, and go to state 73
    IDF    shift, and go to state 74
    CST_R  shift, and go to state 75

    cst_SE  go to state 77
    cst_SR  go to state 78
    EXP_AR  go to state 158


state 149

   63 P: A IDF .

    $default  reduce using rule 63 (P)


state 150

   65 P: A CST_R .

    $default  reduce using rule 65 (P)


state 151

   75 cond: PAROU id1 CP id1 PARFER .

    $default  reduce using rule 75 (cond)


state 152

   85 CO: mc_IF PAROU N cond mc_AND N cond PARFER . DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND N cond PARFER . DEUXP L_INS mc_ELSE DEUXP L_INS

    DEUXP  shift, and go to state 159


state 153

   86 CO: mc_IF PAROU N cond mc_OR N cond PARFER . DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR N cond PARFER . DEUXP L_INS mc_ELSE DEUXP L_INS

    DEUXP  shift, and go to state 160


state 154

   87 CO: mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE . DEUXP L_INS

    DEUXP  shift, and go to state 161


state 155

   96 BOU: mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER . DEUXP L_INS

    DEUXP  shift, and go to state 162


state 156

   26 cst_SE: . PAROU CST_SE PARFER
   26       | PAROU . CST_SE PARFER
   27 cst_SR: . PAROU CST_SR PARFER
   27       | PAROU . CST_SR PARFER
   41 affectation: IDF AFFECT PAROU . EXP_AR PARFER P
   44 EXP_AR: . IDF EXP
   45       | . CST_E EXP
   46       | . CST_R EXP
   47       | . cst_SE EXP
   48       | . cst_SR EXP

    CST_SE  shift, and go to state 70
    CST_E   shift, and go to state 71
    PAROU   shift, and go to state 73
    IDF     shift, and go to state 74
    CST_R   shift, and go to state 75
    CST_SR  shift, and go to state 76

    cst_SE  go to state 77
    cst_SR  go to state 78
    EXP_AR  go to state 79


state 157

   66 P: DIV PAROU EXP_AR . PARFER P

    PARFER  shift, and go to state 163


state 158

   62 P: A PAROU EXP_AR . PARFER P

    PARFER  shift, and go to state 164


state 159

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   85   | mc_IF PAROU N cond mc_AND N cond PARFER DEUXP . L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND N cond PARFER DEUXP . L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 165
    BOU          go to state 20


state 160

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   86   | mc_IF PAROU N cond mc_OR N cond PARFER DEUXP . L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR N cond PARFER DEUXP . L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 166
    BOU          go to state 20


state 161

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   87   | mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP . L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 167
    BOU          go to state 20


state 162

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS
   96    | mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP . L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 168
    BOU          go to state 20


state 163

   62 P: . A PAROU EXP_AR PARFER P
   63  | . A IDF
   64  | . A CST_E
   65  | . A CST_R
   66  | . DIV PAROU EXP_AR PARFER P
   66  | DIV PAROU EXP_AR PARFER . P
   67  | . DIV IDF
   68  | . DIV CST_E
   69  | . DIV CST_R
   70  | .
   71 A: . PLUS
   72  | . MOINS
   73  | . FOIS

    PLUS   shift, and go to state 130
    MOINS  shift, and go to state 131
    FOIS   shift, and go to state 132
    DIV    shift, and go to state 133

    $default  reduce using rule 70 (P)

    P  go to state 169
    A  go to state 135


state 164

   62 P: . A PAROU EXP_AR PARFER P
   62  | A PAROU EXP_AR PARFER . P
   63  | . A IDF
   64  | . A CST_E
   65  | . A CST_R
   66  | . DIV PAROU EXP_AR PARFER P
   67  | . DIV IDF
   68  | . DIV CST_E
   69  | . DIV CST_R
   70  | .
   71 A: . PLUS
   72  | . MOINS
   73  | . FOIS

    PLUS   shift, and go to state 130
    MOINS  shift, and go to state 131
    FOIS   shift, and go to state 132
    DIV    shift, and go to state 133

    $default  reduce using rule 70 (P)

    P  go to state 170
    A  go to state 135


state 165

   85 CO: mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS .
   88   | mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS . mc_ELSE DEUXP L_INS

    mc_ELSE  shift, and go to state 171

    mc_ELSE   [reduce using rule 85 (CO)]
    $default  reduce using rule 85 (CO)


state 166

   86 CO: mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS .
   89   | mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS . mc_ELSE DEUXP L_INS

    mc_ELSE  shift, and go to state 172

    mc_ELSE   [reduce using rule 86 (CO)]
    $default  reduce using rule 86 (CO)


state 167

   87 CO: mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS .

    $default  reduce using rule 87 (CO)


state 168

   96 BOU: mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS .

    $default  reduce using rule 96 (BOU)


state 169

   66 P: DIV PAROU EXP_AR PARFER P .

    $default  reduce using rule 66 (P)


state 170

   62 P: A PAROU EXP_AR PARFER P .

    $default  reduce using rule 62 (P)


state 171

   88 CO: mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE . DEUXP L_INS

    DEUXP  shift, and go to state 173


state 172

   89 CO: mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE . DEUXP L_INS

    DEUXP  shift, and go to state 174


state 173

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP . L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 175
    BOU          go to state 20


state 174

   33 INST: . INS
   34     | .
   35 INS: .
   36    | . affectation
   37    | . CO
   38    | . BOU
   39    | .
   40 affectation: . IDF AFFECT EXP_AR
   41            | . IDF AFFECT PAROU EXP_AR PARFER P
   42            | . IDF AFFECT IDF
   43            | .
   84 CO: . mc_IF PAROU N cond PARFER DEUXP L_INS
   85   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS
   86   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS
   87   | . mc_IF PAROU N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   88   | . mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | . mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS
   89   | mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP . L_INS
   92 L_INS: . INST
   93      | .
   94 BOU: . mc_WHILE PAROU N cond PARFER DEUXP L_INS
   95    | . mc_FOR IDF mc_IN IDF DEUXP L_INS
   96    | . mc_FOR IDF mc_INRANGE PAROU CST_E ver CST_E PARFER DEUXP L_INS

    mc_IF     shift, and go to state 5
    mc_WHILE  shift, and go to state 6
    mc_FOR    shift, and go to state 7
    IDF       shift, and go to state 125

    $end      reduce using rule 34 (INST)
    $end      [reduce using rule 35 (INS)]
    $end      [reduce using rule 39 (INS)]
    $end      [reduce using rule 43 (affectation)]
    $end      [reduce using rule 93 (L_INS)]
    BOOL      reduce using rule 34 (INST)
    BOOL      [reduce using rule 35 (INS)]
    BOOL      [reduce using rule 39 (INS)]
    BOOL      [reduce using rule 43 (affectation)]
    BOOL      [reduce using rule 93 (L_INS)]
    INTEGER   reduce using rule 34 (INST)
    INTEGER   [reduce using rule 35 (INS)]
    INTEGER   [reduce using rule 39 (INS)]
    INTEGER   [reduce using rule 43 (affectation)]
    INTEGER   [reduce using rule 93 (L_INS)]
    FLOAT     reduce using rule 34 (INST)
    FLOAT     [reduce using rule 35 (INS)]
    FLOAT     [reduce using rule 39 (INS)]
    FLOAT     [reduce using rule 43 (affectation)]
    FLOAT     [reduce using rule 93 (L_INS)]
    CHAR      reduce using rule 34 (INST)
    CHAR      [reduce using rule 35 (INS)]
    CHAR      [reduce using rule 39 (INS)]
    CHAR      [reduce using rule 43 (affectation)]
    CHAR      [reduce using rule 93 (L_INS)]
    mc_IF     [reduce using rule 34 (INST)]
    mc_IF     [reduce using rule 35 (INS)]
    mc_IF     [reduce using rule 39 (INS)]
    mc_IF     [reduce using rule 43 (affectation)]
    mc_IF     [reduce using rule 93 (L_INS)]
    mc_WHILE  [reduce using rule 34 (INST)]
    mc_WHILE  [reduce using rule 35 (INS)]
    mc_WHILE  [reduce using rule 39 (INS)]
    mc_WHILE  [reduce using rule 43 (affectation)]
    mc_WHILE  [reduce using rule 93 (L_INS)]
    mc_ELSE   reduce using rule 34 (INST)
    mc_ELSE   [reduce using rule 35 (INS)]
    mc_ELSE   [reduce using rule 39 (INS)]
    mc_ELSE   [reduce using rule 43 (affectation)]
    mc_ELSE   [reduce using rule 93 (L_INS)]
    mc_FOR    [reduce using rule 34 (INST)]
    mc_FOR    [reduce using rule 35 (INS)]
    mc_FOR    [reduce using rule 39 (INS)]
    mc_FOR    [reduce using rule 43 (affectation)]
    mc_FOR    [reduce using rule 93 (L_INS)]
    IDF       [reduce using rule 34 (INST)]
    IDF       [reduce using rule 35 (INS)]
    IDF       [reduce using rule 39 (INS)]
    IDF       [reduce using rule 43 (affectation)]
    IDF       [reduce using rule 93 (L_INS)]
    $default  reduce using rule 34 (INST)

    INST         go to state 126
    INS          go to state 17
    affectation  go to state 18
    CO           go to state 19
    L_INS        go to state 176
    BOU          go to state 20


state 175

   88 CO: mc_IF PAROU N cond mc_AND N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS .

    $default  reduce using rule 88 (CO)


state 176

   89 CO: mc_IF PAROU N cond mc_OR N cond PARFER DEUXP L_INS mc_ELSE DEUXP L_INS .

    $default  reduce using rule 89 (CO)
